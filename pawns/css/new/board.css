/* ================================================
   Board.css - Chessboard Styling
   Contains all styles related to the board and chess pieces
   ================================================ */

/* --- Chessboard Styles --- */
.board-wrapper {
    width: 100%; max-width: 450px; margin: 10px auto; position: relative;
    touch-action: none; /* Prevent scrolling initiated on the board */
    cursor: default;
}

#chessboard {
    width: 100%; aspect-ratio: 1 / 1; display: grid;
    grid-template-columns: repeat(8, 1fr); grid-template-rows: repeat(8, 1fr);
    border: 4px solid var(--board-dark); box-shadow: 0 4px 10px var(--shadow-color);
    transition: transform 0.5s ease-in-out;
}

#chessboard.flipped { transform: rotate(180deg); }

.square {
    display: flex; justify-content: center; align-items: center; position: relative;
    font-size: clamp(20px, 7.5vw, 40px); /* Responsive font size */
    line-height: 1; cursor: pointer;
}

.square.light { background-color: var(--board-light); }
.square.dark { background-color: var(--board-dark); }

/* --- Pieces --- */
.piece {
    width: 100%; height: 100%; display: flex; justify-content: center; align-items: center;
    cursor: grab; user-select: none; -webkit-user-drag: none;
    transition: opacity 0.2s ease-out, transform 0.1s ease;
    opacity: 1; touch-action: none; /* Piece itself shouldn't trigger scroll */
    position: relative; z-index: 5; pointer-events: none; /* Let square handle clicks */
}

.piece:active { cursor: grabbing; }
.piece.touch-hidden-original {
    opacity: 0 !important;
    visibility: hidden !important;
    display: none !important;
    pointer-events: none !important;
    z-index: 4;
    transition: none !important;
}
.piece.white { 
    color: var(--piece-white); 
    text-shadow: -1px -1px 0 var(--piece-white-outline), 
                 1px -1px 0 var(--piece-white-outline), 
                 -1px 1px 0 var(--piece-white-outline), 
                 1px 1px 0 var(--piece-white-outline);
}
.piece.black { 
    color: var(--piece-black); 
    text-shadow: -1px -1px 0 var(--piece-black-outline), 
                 1px -1px 0 var(--piece-black-outline), 
                 -1px 1px 0 var(--piece-black-outline), 
                 1px 1px 0 var(--piece-black-outline);
}
#chessboard.flipped .piece { transform: rotate(180deg); }

/* --- Drag Clone --- */
.piece-touch-clone {
    position: absolute; opacity: var(--touch-drag-clone-opacity, 0.95); z-index: 1000;
    pointer-events: none; /* Ignore pointer events */
    transform-origin: center center; 
    /* Use larger font-size for visual enlargement */
    font-size: clamp(40px, 12vw, 70px); /* Увеличен размер шрифта для клона */
    line-height: 1; 
    display: flex; justify-content: center; align-items: center;
    /* Color/Shadow will be set directly via JS */
    /* Width/Height set via JS based on original + scale factor */
    width: var(--clone-width, 60px); 
    height: var(--clone-height, 60px); 
    left: 0; top: 0; /* Positioned by JS */
    filter: drop-shadow(0 0 3px rgba(0,0,0,0.7)); /* Увеличена тень для лучшей видимости */
    /* Only use transform for positioning */
    transform: var(--translate-transform, translate(0,0)); 
    /* Remove scale animation/transition */
    transition: opacity 0.1s; 
}

/* Apply rotation to clone based on board state - Improved */
#chessboard.flipped ~ .piece-touch-clone {
    /* Apply a separate rotation to make pieces appear upright when board is flipped */
    transform: var(--translate-transform, translate(0,0)) rotate(180deg);
}

#chessboard:not(.flipped) ~ .piece-touch-clone {
    transform: var(--translate-transform, translate(0,0));
}

/* Ensure white/black classes are honored on the clone */
.piece-touch-clone.white { 
    color: var(--piece-white); 
    text-shadow: -1px -1px 0 var(--piece-white-outline), 
                 1px -1px 0 var(--piece-white-outline), 
                 -1px 1px 0 var(--piece-white-outline), 
                 1px 1px 0 var(--piece-white-outline);
}

.piece-touch-clone.black { 
    color: var(--piece-black); 
    text-shadow: -1px -1px 0 var(--piece-black-outline), 
                 1px -1px 0 var(--piece-black-outline), 
                 -1px 1px 0 var(--piece-black-outline), 
                 1px 1px 0 var(--piece-black-outline);
}

/* --- Highlights --- */
.square::before { /* Pseudo-element for move highlights */
    content: ''; position: absolute; top: 50%; left: 50%; 
    width: 15px; height: 15px; /* Уменьшен размер точки */
    border-radius: 50%; /* Круглая точка */
    transform: translate(-50%, -50%); /* Центрируем точку */
    opacity: 0;
    transition: opacity 0.15s ease-in-out, background-color 0.15s ease-in-out;
    pointer-events: none; z-index: 3;
}

.square.valid-move::before { 
    background-color: rgba(76, 175, 80, 0.85); /* Зеленый цвет для точки */
    opacity: 1; 
}

.square.valid-move.move-capture::before { 
    background-color: rgba(255, 87, 34, 0.85); /* Красно-оранжевый для взятий */
    width: 20px; height: 20px; /* Уменьшен размер для взятий */
}

/* Стиль для тени под курсором при перетаскивании (как в lichess) */
.square.touch-drag-target-valid::before { 
    width: 80%; height: 80%; /* Уменьшен размер круга */
    background-color: rgba(76, 175, 80, 0.7) !important; /* Более непрозрачный зеленый цвет */
    border-radius: 50%; 
    opacity: 1; 
    box-shadow: inset 0 0 8px 3px rgba(76, 175, 80, 0.9); /* Уменьшенная внутренняя тень */
}

/* Стиль для увеличения красного кружка при наведении на взятие */
.square.touch-drag-target-valid.move-capture::before {
    width: 80%; height: 80%; /* Увеличенный размер для взятий */
    background-color: rgba(255, 87, 34, 0.7) !important; /* Красно-оранжевый цвет */
    box-shadow: inset 0 0 8px 3px rgba(255, 87, 34, 0.9); /* Внутренняя тень красного цвета */
}

.square.selected-piece-origin { background-color: var(--highlight-selected-piece); }
.last-move-from, .last-move-to { background-color: var(--highlight-last-move) !important; z-index: 2; }
.hint-highlight {
    box-shadow: 0 0 10px 4px var(--highlight-hint);
    border-radius: 10%; 
    z-index: 5;
}

/* Прозрачность оригинальной пешки при перетаскивании */
.touch-hidden-original {
    opacity: 0 !important; /* Полностью невидимая */
    visibility: hidden !important; /* Обеспечиваем полное скрытие */
    display: none !important; /* Дополнительная гарантия невидимости */
    transition: none !important; /* Отключаем любые переходы для мгновенного скрытия */
} 